In the army, each soldier has an assigned rank. A soldier of rank X has to report to (any) soldier of rank X+1. Many Soldiers can report to the same superior. Write a function: that given an array ranks consisting ranks return the number of soldiers who can report to some Superior. Examples:

1) Given ranks = [3,4,3,0,2,2,3,0,0] should return 5

2) Given Ranks = [4,2,0] should return 0,

3) Given Ranks = [4,4,3,3,1,0] your function should return 3



1) Given ranks = [3,4,3,0,2,2,3,0,0] sholud return 5 because 
->three soldiers of rank 3 report to a soldier of rank 4 
-> two soldiers of rank 2 report to any soldier of rank 3 

2) Given Ranks = [4,2,0] should return 0, 

3) Given Ranks = [4,4,3,3,1,0] your function should return 3 . Because 
-> A soldier of rank 0 can report to a soldier of rank 1. 
-> Two soldiers of rank 3 can report to any soldier of rank 4



  class Program
    {
        static void Main(string[] args)
        {
            int rank = 0;
            char[] ch = { '3', '4', '3', '0', '2', '2', '3', '0', '0' };
            //char [] ch = {'4','2','0'};
            //char [] ch = {'4','4','3','3','1','0'};
            string input = new string(ch);
            Array.Sort(ch);
            for (int i = 0; i < ch.Length; i++)
            {
                for (int j = i; j < ch.Length - 1; j++)
                {
                    if ((ch[i] + 1) == (ch[j + 1]))
                    {
                        rank++;
                        break;
                    }
                }
            }
            Console.WriteLine(rank.ToString());
        }
    }
